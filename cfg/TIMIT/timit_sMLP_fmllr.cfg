[cfg_proto]
cfg_proto=proto/global.proto
cfg_proto_chunk=proto/global_chunk.proto

[exp]
cmd=
run_nn_script=run_nn
out_folder=exp/timit_sMLP_fmllr
seed=1234
use_cuda=True
multi_gpu=False
save_gpumem=False
N_epochs_tr=24

[dataset1]
data_name=train
fea:fea_name=fmllr
    fea_lst=/home/emre/data/timit/data-fmllr-tri3/train/feats.scp
    fea_opts=apply-cmvn --utt2spk=ark:/home/emre/data/timit/data-fmllr-tri3/train/utt2spk  scp:/home/emre/data/timit/data-fmllr-tri3/train/cmvn.scp ark:- ark:- | add-deltas --delta-order=2 ark:- ark:- |
    cw_left=5
    cw_right=5

    
lab:lab_name=lab_cd
    lab_folder=/home/emre/data/timit/exp/tri3_ali
    lab_opts=ali-to-pdf 
    lab_count_file=auto
    lab_data_folder=/home/emre/data/timit/data-fmllr-tri3/train/
    lab_graph=/home/emre/data/timit/exp/tri3/graph/

N_chunks=5
        
[dataset2]
data_name=dev
fea:fea_name=fmllr
    fea_lst=/home/emre/data/timit/data-fmllr-tri3/dev/feats.scp
    fea_opts=apply-cmvn --utt2spk=ark:/home/emre/data/timit/data-fmllr-tri3/dev/utt2spk scp:/home/emre/data/timit/data-fmllr-tri3/dev/cmvn.scp ark:- ark:- | add-deltas --delta-order=2 ark:- ark:- |
    cw_left=5
    cw_right=5


lab:lab_name=lab_cd
    lab_folder=/home/emre/data/timit/exp/tri3_ali_dev
    lab_opts=ali-to-pdf 
    lab_count_file=auto
    lab_data_folder=/home/emre/data/timit/data-fmllr-tri3/dev/
    lab_graph=/home/emre/data/timit/exp/tri3/graph/

N_chunks=1

[dataset3]
data_name=test
fea:fea_name=fmllr
    fea_lst=/home/emre/data/timit/data-fmllr-tri3/test/feats.scp
    fea_opts=apply-cmvn --utt2spk=ark:/home/emre/data/timit/data-fmllr-tri3/test/utt2spk scp:/home/emre/data/timit/data-fmllr-tri3/test/cmvn.scp ark:- ark:- | add-deltas --delta-order=2 ark:- ark:- |
    cw_left=5
    cw_right=5


lab:lab_name=lab_cd
    lab_folder=/home/emre/data/timit/exp/tri3_ali_test
    lab_opts=ali-to-pdf 
    lab_count_file=auto
    lab_data_folder=/home/emre/data/timit/data-fmllr-tri3/test/
    lab_graph=/home/emre/data/timit/exp/tri3/graph/

N_chunks=1


[data_use]
train_with=train
valid_with=dev
forward_with=dev,test


[batches]
batch_size_train=128
max_seq_length_train=1000
increase_seq_length_train=False
start_seq_len_train=100
multply_factor_seq_len_train=2
batch_size_valid=128
max_seq_length_valid=1000

[architecture1]
arch_name = MLP_snn
arch_proto = proto/sMLP.proto
arch_library = neural_networks
arch_class = sMLP
arch_pretrain_file = none
arch_freeze = False
arch_seq_model = False
dnn_out_dim = N_out_lab_cd
T = 10
arch_lr = 0.08
arch_halving_factor = 0.5
arch_improvement_threshold = 0.001
arch_opt = sgd
opt_momentum = 0.0
opt_weight_decay = 0.0
opt_dampening = 0.0
opt_nesterov = False


[model]
model_proto=proto/model.proto
model:out_dnn1=compute(MLP_snn,fmllr)
      loss_final=cost_nll(out_dnn1,lab_cd)
      err_final=cost_err(out_dnn1,lab_cd)
 
      
[forward]
forward_out=out_dnn1
normalize_posteriors=True
normalize_with_counts_from=lab_cd
save_out_file=False
require_decoding=True


[decoding]
decoding_script_folder = kaldi_decoding_scripts/
decoding_script = decode_dnn.sh
decoding_proto = proto/decoding.proto
min_active = 200
max_active = 7000
max_mem = 50000000
beam = 13.0
latbeam = 8.0
acwt = 0.2
max_arcs = -1
skip_scoring = false
scoring_script = local/score.sh
scoring_opts = "--min-lmwt 1 --max-lmwt 10"
norm_vars = False
